openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'KNX Core Plugin: API'
  description: ''
servers:
  - url: http://localhost:8338/api
paths:
  /v1/read:
    post:
      description: |
        Sends a READ response to KNX Client for a specified KNX group address (in POST body).
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                # Group Address (Byte Array)
                - type: object
                  properties:
                    groupAddress:
                      $ref: '#/components/schemas/TwoByteArray'
                  required:
                    - groupAddress
                # Group Address (Integer)
                - type: object
                  properties:
                    groupAddress:
                      type: integer
                      minimum: 0
                      maximum: 65535
                      example: 123
                  required:
                    - groupAddress
                # Group Address (String)
                - type: object
                  properties:
                    groupAddress:
                      type: string
                      example: '1/2/100'
                  required:
                    - groupAddress
            examples:
              Group Address:
                value: {"groupAddress":{"type":1, raw:[15, 19]}}
              Group Address (byte array):
                value: {"groupAddress":[15, 19]}
              Group Address Free-Level (integer):
                value: {"groupAddress":1234}
              Group Address Free-Level (string):
                value: {"groupAddress":"1234"}
              Group Address Two-Level:
                value: {"groupAddress":"1/330"}
              Group Address Three-Level:
                value: {"groupAddress":"1/2/100"}
      responses:
        200:
          description: Read request accepted and got response from KNX Net/IP device.
          content:
            application/json:
              schema:
                oneOf:
                  # Full Response (Group Address is present in KNX Project File)
                  - type: object
                    description: test
                    properties:
                      groupAddress:
                        $ref: '#/components/schemas/GroupAddress'
                      name:
                        type: string
                        example: "Temperature (1st Floor, Bedroom)"
                      description:
                        type: string
                        example: "The temperature in Bedroom"
                      dataPointType:
                        type: string
                        example: "9.001"
                      value:
                        type: string
                        example: '23.45'
                      unit:
                        type: string
                        example: 'Â°C'
                      raw:
                        type: array
                        items:
                          type: integer
                        example: [15, 4, 66]
                  # Partial Response
                  - type: object
                    description: "test"
                    properties:
                      groupAddress:
                        $ref: '#/components/schemas/GroupAddress'
                      raw:
                        type: array
                        items:
                          type: integer
                        example: [15, 4, 66]

              examples:
                Full Response (Group Address is present in KNX Project File):
                  value: {"groupAddress":{"type":1,"format":{"free_level":"786","two_level":"0/786","three_level":"0/3/18"},"raw":[3,18]},"name":"Sub Group - DPT 12 (0x80 02 70 FF)","description":"4-bytes, unsigned (2147643647)","dataPointType":"12.001","value":"2147643647","unit":"pulses","raw":[-128,2,112,-1]}
                Partial Response:
                  value: {"groupAddress":{"type":1,"format":{"free_level":"786","two_level":"0/786","three_level":"0/3/18"},"raw":[3,18]},"raw":[-128,2,112,-1]}
        400:
          description: 'Bad Request. At least one field has not been provided (correctly).'
        404:
          description: 'No response got given KNX Group Address (one cause might be a missing READ flag on KNX Group Address)'
        500:
          description: 'Internal Error.'

  /v1/write:
    post:
      description: 'Sends a WRITE response to KNX Client'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                # Group Address and Raw Data
                - type: object
                  properties:
                    groupAddress:
                      $ref: '#/components/schemas/GroupAddress'
                    raw:
                      type: array
                      items:
                        type: integer
                      example: [15, 4, 66]
                  required:
                    - groupAddress
                    - raw

                # Group Address, DataPointType and Values
                - type: object
                  properties:
                    groupAddress:
                      $ref: '#/components/schemas/GroupAddress'
                    dataPointType:
                      type: string
                      example: '1.001'
                    values:
                      type: string
                      example: 'on'
                  required:
                    - groupAddress
                    - dataPointType
                    - values

            examples:
              Group Address (Integer) and Raw Data:
                value: {"groupAddress":5401, raw: [0]}
              Group Address (String) and Raw Data:
                value: {"groupAddress":"1/2/100", raw: [0]}
              Group Address (Byte Array) and Raw Data:
                value: {"groupAddress": [15, 19], raw: [0]}
              Group Address (Integer), DataPointType and Values:
                value: {"groupAddress":5401, "dataPointType": "1.001", "values": ["on"]}
              Group Address (String), DataPointType and Values:
                value: {"groupAddress":"1/2/100", "dataPointType": "1.001", "values": ["on"]}
              Group Address (Byte Array), DataPointType and Values:
                value: {"groupAddress":[15, 19], "dataPointType": "1.001", "values": ["on"]}
      responses:
        202:
          description: 'Write request accepted by KNX Net/IP device, but success is not guaranteed (e.g. one case might be that group address has no WRITE flag set). Body is empty.'
          content:
            application/json:
              example: {}
        400:
          description: 'Bad Request. At least one field has not been provided (correctly).'
        500:
          description: 'Internal Error.'

  /v1/statistic:
    get:
      description: Returns the statistic from KNX client
      responses:
        200:
          description: 'Returns statistic'
          content:
            application/json:
              example: {"inbound":{"total":{"packets":3,"bytes":224},"search":{"request":0,"response":0},"description":{"request":0,"response":1},"connect":{"request":0,"response":1},"connection_state":{"request":0,"response":1},"disconnect":{"request":0,"response":0},"tunneling":{"request":0,"response":0}},"outbound":{"total":{"packets":3,"bytes":182},"search":{"request":0,"response":0},"description":{"request":1,"response":0},"connect":{"request":1,"response":0},"connection_state":{"request":1,"response":0},"disconnect":{"request":0,"response":0},"tunneling":{"request":0,"response":0}},"error":{"total":{"packets":0,"rate":0}}}

  /v1/status:
    get:
      description: "Returns all status from all KNX group addresses"
      responses:
        207:
          description: 'Multi-Status Response. Returns all status'
          content:
            application/json:
              example: [{"status":"OK","timestamp":{"seconds":123,"nanos":456000000},"sourceAddress":{"type":0,"format":"15.15.255","raw":[-1,-1]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"258","two_level":"0/258","three_level":"0/1/2"},"raw":[1,2]},"name":"DPT1.Switch Name","description":"DPT1.Switch Description","dataPointType":"1.001","raw":[1]},{"status":"OK","timestamp":{"seconds":234,"nanos":567000000},"sourceAddress":{"type":0,"format":"15.15.255","raw":[-1,-1]},"apci":"GROUP_VALUE_WRITE","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"2563","two_level":"1/515","three_level":"1/2/3"},"raw":[10,3]},"name":"DPT5.1-Octet Unsigned Name","description":"DPT5.1-Octet Unsigned Description","dataPointType":"5.010","raw":[35]},{"status":"OK","timestamp":{"seconds":345,"nanos":678000000},"sourceAddress":{"type":0,"format":"15.15.255","raw":[-1,-1]},"apci":"GROUP_VALUE_RESPONSE","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"4868","two_level":"2/772","three_level":"2/3/4"},"raw":[19,4]},"name":"DPT7.2-Octet Unsigned Name","description":"DPT7.2-Octet Unsigned Description","dataPointType":"7.001","raw":[86,126]},{"status":"ERROR","groupAddress":{"type":1,"format":{"free_level":"7173","two_level":"3/1029","three_level":"3/4/5"},"raw":[28,5]}}]

  /v1/status/{freeLevel}:
    parameters:
      - in: path
        name: freeLevel
        required: true
        description: Free-Level Group Address
        schema:
          type: integer
        example: 2660
    get:
      description: 'Returns single status for a free-level group address'
      responses:
        200:
          description: 'Status for given free-level group address found'
          content:
            application/json:
              examples:
                Full Response (Group Address is present in KNX Project File):
                  value: {"status":"OK","timestamp":{"seconds":9876,"nanos":543000000},"sourceAddress":{"type":0,"format":"15.14.13","raw":[-2,13]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"16206","two_level":"7/1870","three_level":"7/7/78"},"raw":[63,78]},"name":"DPT1.Switch Name","description":"DPT1.Switch Description","dataPointType":"1.001","raw":[119,67,33]}
                Partial Response:
                  value: {"status":"OK","timestamp":{"seconds":19876,"nanos":543000000},"sourceAddress":{"type":0,"format":"15.14.12","raw":[-2,12]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"18255","two_level":"8/1871","three_level":"8/7/79"},"raw":[71,79]},"raw":[56,85]}
        404:
          description: 'No status found for given group address'

  /v1/status/{mainGroup}/{subGroup}:
    parameters:
      - in: path
        name: mainGroup
        required: true
        description: Main Group for Two-Level Group Address
        schema:
          type: integer
        example: 1
      - in: path
        name: subGroup
        required: true
        description: Sub Group for Two-Level Group Address
        schema:
          type: integer
        example: 612
    get:
      description: 'Returns single status for a two-level group address'
      responses:
        200:
          description: 'Status for given two-level group address found'
          content:
            application/json:
              examples:
                Full Response (Group Address is present in KNX Project File):
                  value: {"status":"OK","timestamp":{"seconds":9876,"nanos":543000000},"sourceAddress":{"type":0,"format":"15.14.13","raw":[-2,13]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"16206","two_level":"7/1870","three_level":"7/7/78"},"raw":[63,78]},"name":"DPT1.Switch Name","description":"DPT1.Switch Description","dataPointType":"1.001","raw":[119,67,33]}
                Partial Response:
                  value: {"status":"OK","timestamp":{"seconds":19876,"nanos":543000000},"sourceAddress":{"type":0,"format":"15.14.12","raw":[-2,12]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"18255","two_level":"8/1871","three_level":"8/7/79"},"raw":[71,79]},"raw":[56,85]}
        404:
          description: 'No status found for given group address'

  /v1/status/{mainGroup}/{middleGroup}/{subGroup}:
    parameters:
      - in: path
        name: mainGroup
        required: true
        description: Main Group for Three-Level Group Address
        schema:
          type: integer
        example: 1
      - in: path
        name: middleGroup
        required: true
        description: Middle Group for Three-Level Group Address
        schema:
          type: integer
        example: 2
      - in: path
        name: subGroup
        required: true
        description: Sub Group for Three-Level Group Address
        schema:
          type: integer
        example: 100
    get:
      description: 'Returns single status for a three-level group address'
      responses:
        200:
          description: 'Status for given three-level group address found'
          content:
            application/json:
              examples:
                Full Response (Group Address is present in KNX Project File):
                  value: {"status":"OK","timestamp":{"seconds":9876,"nanos":543000000},"sourceAddress":{"type":0,"format":"15.14.13","raw":[-2,13]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"16206","two_level":"7/1870","three_level":"7/7/78"},"raw":[63,78]},"name":"DPT1.Switch Name","description":"DPT1.Switch Description","dataPointType":"1.001","raw":[119,67,33]}
                Partial Response:
                  value: {"status":"OK","timestamp":{"seconds":19876,"nanos":543000000},"sourceAddress":{"type":0,"format":"15.14.12","raw":[-2,12]},"apci":"GROUP_VALUE_READ","dirty":false,"groupAddress":{"type":1,"format":{"free_level":"18255","two_level":"8/1871","three_level":"8/7/79"},"raw":[71,79]},"raw":[56,85]}
        404:
          description: 'No status found for given group address'

components:
  schemas:

    # Group Address may be identified by several areas
    GroupAddress:
      type: object
      properties:
        type:
          type: integer
          example: 1
        format:
          type: object
          properties:
            free_level:
              type: string
              example: '2660'
            two_level:
              type: string
              example: '1/612'
            three_level:
              type: string
              example: '1/2/100'
        raw:
          $ref: '#/components/schemas/TwoByteArray'

    TwoByteArray:
      type: array
      items:
        type: integer
        minimum: 0
        maximum: 255
      minItems: 2
      maxItems: 2
      example: [15,19]
